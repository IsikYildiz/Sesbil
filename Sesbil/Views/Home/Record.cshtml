@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kayıt Ekranı</title>
    <style>
        p{
            font-size: 20px;
            border: 3px solid rgb(0, 0, 0);
            border-radius: 10px;
            background-color: rgb(183, 173, 173);
            padding:10px;
        }

        button{
            transform: skew(-15deg);
            border:2px solid rgb(35, 34, 48);
            background-color: rgb(28, 161, 161);
            box-shadow: 2px 2px 4px black;
            width: 180px;
            height: 40px;
            font-size: 20px;
            font-weight: bold;
        }

        button:hover{
            transform: scale(1.2,1.2);
        }

        button:focus{
            background-color:rgb(91, 203, 203);
        }

        .histogram{
            height: 400px; 
            border: 2px solid black;
            border-radius: 10px;
            background-color: rgb(207, 204, 204);
        }
    </style>
    <script>
        var content=document.getElementsByTagName('div');
        var currentButtons=document.getElementsByTagName("button");

        let socket;

        async function startRecording() {
            if (socket && socket.readyState === WebSocket.OPEN) {
                console.warn("WebSocket already open.");
                return;
            }
            currentButtons[0].remove();
            document.getElementById("Durdur").style.display="block";

            await fetch('/api/recording/start', { method: 'POST' });

            // WebSocket bağlantısını başlat
            socket = new WebSocket("ws://127.0.0.1:8000/ws/information");
            document.getElementById("Kılavuz").style.display="hidden";

            socket.onmessage = function (event) {
                var message=event.data;
                if (typeof message==="string"){
                    if(message.includes("ilk mesaj")){
                        document.getElementById("Metin").style.display="block";
                        message = message.substring("İlk mesaj".length);
                        var messageNode=document.createTextNode(message);
                        document.getElementById("Metin").appendChild(messageNode)
                    }
                    else if (message.includes("ikinci mesaj")){
                        document.getElementById("Konu").style.display="block";
                        message = message.substring("ikinci mesaj".length);
                        var messageNode=document.createTextNode(message);
                        document.getElementById("Konu").appendChild(messageNode)
                    }
                    else if (message.includes("üçüncü mesaj")){
                        document.getElementById("Duygu").style.display="block";
                        message = message.substring("üçüncü mesaj".length);
                        var messageNode=document.createTextNode(message);
                        document.getElementById("Duygu").appendChild(messageNode)
                    }
                    else if (message.includes("dördüncü mesaj")){
                        document.getElementById("Kişi").style.display="block";
                        document.getElementById("Kişi").innerHTML="";
                        message = message.substring("dördüncü mesaj".length);
                        whom_message="Konuşmacı: " + message;
                        var messageNode=document.createTextNode(whom_message);
                        document.getElementById("Kişi").appendChild(messageNode)
                    }
                    else if (message.includes("beşinci mesaj")){
                        document.getElementById("Konuşanlar").style.display="block";
                        document.getElementById("Konuşanlar").innerHTML="";
                        message = message.substring("beşinci mesaj".length);
                        message="Konuşmacı İstatislikleri: " + message;
                        var messageNode=document.createTextNode(message);
                        document.getElementById("Konuşanlar").appendChild(messageNode)
                    }
                }
                else if (message instanceof Blob) {
                    document.getElementById("histogram").style.display = "block";
                    const url = URL.createObjectURL(message);
                    document.getElementById("histogram").src = url;
                } 
                else if (message instanceof ArrayBuffer) {
                    const blob = new Blob([new Uint8Array(message)], { type: 'image/png' });
                    const url = URL.createObjectURL(blob);
                    document.getElementById("histogram").src = url;
                } 
                else {
                    console.error("Beklenmeyen veri türü:", typeof message);
                }
            };

            setTimeout(() => stopRecording(), 180000);

            socket.onclose = function () {
                console.log("WebSocket kapandı.");
            };
        }

        async function stopRecording() {
            while(currentButtons[0]){
                currentButtons[0].remove();
            }

            await fetch('/api/recording/stop', { method: 'POST' });
        }
        
    </script>
</head>
<body>
    <div class="container">
        <p id="Kılavuz"><b>Nasıl Kullanılır:</b>Tek yapmanız gereken başla tuşuna basıp konuşmaktır. 
        Maksimum 3dk konuşabilirsiniz. Konuştuğunuz süre boyunca kimin konuştuğu tahmin edilecektir.
        <br>
        &nbsp;&nbsp;Ses kaydını durdurmak için durdur tuşuna basın ve sessizce bekleyin. 
        Konuşmanız metne dönüştürülecek, konuşmanın konusu bulunacak ve duygu tahmini yapılacaktır.
        <br>
        &nbsp;&nbsp;Eğer konuşmalarınız 25 kelimeden az ise konu belirleme ve duygu tahmini yapılamaz.</p>
        <br>
        <button style="margin-left: 43%;" onclick="startRecording()" id="Başla">Başla</button>
        <br>
        <img id="histogram" style="display: none; width: 100%;">
        <br>
        <button style="margin-left: 43%;display:none;" onclick="stopRecording()" id="Durdur">Durdur</button>
        <br>
        <p style="display: none" id="Kişi"></p>
        <br>
        <p style="display: none" id="Konuşanlar"></p>
        <br>
        <p style="display: none" id="Metin">Konuşmanız:&nbsp;</p>
        <br>
        <p style="display: none" id="Konu"></p>
        <br>
        <p style="display: none" id="Duygu">Duygu Durumu:&nbsp;</p>
    </div>
</body>
</html>